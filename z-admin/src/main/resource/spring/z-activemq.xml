<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-2.5.xsd http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd"
       default-autowire="byName">

    <!-- 配置connectionFactory -->
    <bean id="jmsFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
          destroy-method="stop">
        <property name="connectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL" value="tcp://47.98.39.109:61616" />
             	<property name="useAsyncSend"  value="true" />
            </bean>
        </property>
        <property name="maxConnections" value="100" ></property>
        <property name="maximumActiveSessionPerConnection" value="50"></property>
        <!-- 后台对象清理时，休眠时间超过了3000毫秒的对象为过期 -->
        <property name="expiryTimeout" value="3000"></property>
    </bean>

	<!-- ConnectionFactory Definition -->
	<bean id="connectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<constructor-arg ref="jmsFactory" />
	</bean>
	
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
<!-- 		<property name="defaultDestination" ref="defaultDestination" /> -->
		<property name="receiveTimeout" value="60000" />
		<!-- deliveryMode, priority, timeToLive 的开关要生效，必须配置为true，默认false -->
		<property name="explicitQosEnabled" value="true" />
		<!-- 发送模式 DeliveryMode.NON_PERSISTENT=1:非持久 ; DeliveryMode.PERSISTENT=2:持久 -->
		<property name="deliveryMode" value="1" />
	</bean>

	<!-- 推送队列 -->
	<bean id="demoPush" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="wms.back.push.queue"/>
    </bean>
   <!--  <bean id="contributivePush" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="wms.contributive.push.queue"/>
    </bean>
    <bean id="contributiveDeduct" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="${wms.contributive.deduct.queue}"/>
    </bean>
    <bean id="contributiveTransfer" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="${wms.contributive.transfer.queue}"/>
    </bean> -->
    
    <!-- 接收隊列 -->
    <bean id="demo" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="wms.back.push.queue"/>
    </bean>
    <!-- <bean id="remit" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="${financial.remit.reply.queue}"/>
    </bean>
    <bean id="deduct" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="${gateway.deduct.reply.queue}"/>
    </bean>
    <bean id="transfer" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="${gateway.transfer.reply.queue}"/>
    </bean>
    <bean id="fixBack" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="${financial.fixBack.reply.queue}"/>
    </bean> -->
	
	<!-- 自定义接受消息对象-->
	<bean id="demoReceiver" class="cn.z.jiutian.mq.receiver.DemoReceiver" />
	<!-- <bean id="financeRemitReceiver" class="com.dx.wms.mq.activemq.receiver.FinanceRemitReceiver" />
	<bean id="gatewayDeductReceiver" class="com.dx.wms.mq.activemq.receiver.GatewayDeductReceiver" />
	<bean id="gatewayTransferReceiver" class="com.dx.wms.mq.activemq.receiver.GatewayTransferReceiver" />
	<bean id="financeFixBackReceiver" class="com.dx.wms.mq.activemq.receiver.FinanceFixBackReceiver" /> -->
	
	<!-- 监听器对象-->
	<bean class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="demo" />
		<!--开启订阅模式 -->
		<property name="pubSubDomain" value="true" />
		<property name="subscriptionDurable" value="true" />
		<!---这里是设置接收客户端的ID，在持久化时，但这个客户端不在线时，消息就存在数据库里，直到被这个ID的客户端消费掉 -->
		<property name="messageListener" ref="demoReceiver" />
		<!--消息应答方式Session.AUTO_ACKNOWLEDGE 消息自动签收 -->
		<property name="sessionAcknowledgeMode" value="1" />
	</bean>
	
	<!-- <bean class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="remit" />
		开启订阅模式
		<property name="pubSubDomain" value="${dx.wms.mq.pubSubDomain}" />
		<property name="subscriptionDurable" value="${dx.wms.mq.subscriptionDurable}" />
		-这里是设置接收客户端的ID，在持久化时，但这个客户端不在线时，消息就存在数据库里，直到被这个ID的客户端消费掉
		<property name="messageListener" ref="financeRemitReceiver" />
		消息应答方式Session.AUTO_ACKNOWLEDGE 消息自动签收
		<property name="sessionAcknowledgeMode" value="${dx.wms.mq.sessionAcknowledgeMode}" />
	</bean>
	
	<bean class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="deduct" />
		开启订阅模式
		<property name="pubSubDomain" value="${dx.wms.mq.pubSubDomain}" />
		<property name="subscriptionDurable" value="${dx.wms.mq.subscriptionDurable}" />
		-这里是设置接收客户端的ID，在持久化时，但这个客户端不在线时，消息就存在数据库里，直到被这个ID的客户端消费掉
		<property name="messageListener" ref="gatewayDeductReceiver" />
		消息应答方式Session.AUTO_ACKNOWLEDGE 消息自动签收
		<property name="sessionAcknowledgeMode" value="${dx.wms.mq.sessionAcknowledgeMode}" />
	</bean>
	
	<bean class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="transfer" />
		开启订阅模式
		<property name="pubSubDomain" value="${dx.wms.mq.pubSubDomain}" />
		<property name="subscriptionDurable" value="${dx.wms.mq.subscriptionDurable}" />
		-这里是设置接收客户端的ID，在持久化时，但这个客户端不在线时，消息就存在数据库里，直到被这个ID的客户端消费掉
		<property name="messageListener" ref="gatewayTransferReceiver" />
		消息应答方式Session.AUTO_ACKNOWLEDGE 消息自动签收
		<property name="sessionAcknowledgeMode" value="${dx.wms.mq.sessionAcknowledgeMode}" />
	</bean>
	
	<bean class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="fixBack" />
		开启订阅模式
		<property name="pubSubDomain" value="${dx.wms.mq.pubSubDomain}" />
		<property name="subscriptionDurable" value="${dx.wms.mq.subscriptionDurable}" />
		-这里是设置接收客户端的ID，在持久化时，但这个客户端不在线时，消息就存在数据库里，直到被这个ID的客户端消费掉
		<property name="messageListener" ref="financeFixBackReceiver" />
		消息应答方式Session.AUTO_ACKNOWLEDGE 消息自动签收
		<property name="sessionAcknowledgeMode" value="${dx.wms.mq.sessionAcknowledgeMode}" />
	</bean> -->
	
</beans>