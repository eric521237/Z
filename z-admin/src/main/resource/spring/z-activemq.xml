<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-2.5.xsd http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd"
       default-autowire="byName">

    <!-- 配置connectionFactory -->
    <bean id="jmsFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
          destroy-method="stop">
        <property name="connectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <!-- activemq地址 -->
                <property name="brokerURL" value="tcp://127.0.0.1:61616/" />
               <!--  <property name="userName" value="admin" />
                <property name="password" value="admin" /> -->
                <!-- 是否异步发送 -->
             	<property name="useAsyncSend"  value="true" />
            </bean>
        </property>
        <property name="maxConnections" value="100" ></property>
        <property name="maximumActiveSessionPerConnection" value="50"></property>
        <!-- 后台对象清理时，休眠时间超过了3000毫秒的对象为过期 -->
        <property name="expiryTimeout" value="3000"></property>
    </bean>

	<!-- ConnectionFactory Definition -->
	<bean id="connectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<constructor-arg ref="jmsFactory" />
	</bean>
	
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
<!-- 		<property name="defaultDestination" ref="defaultDestination" /> -->
		<property name="receiveTimeout" value="60000" />
		<!-- deliveryMode, priority, timeToLive 的开关要生效，必须配置为true，默认false -->
		<property name="explicitQosEnabled" value="true" />
		<!-- 发送模式 DeliveryMode.NON_PERSISTENT=1:非持久 ; DeliveryMode.PERSISTENT=2:持久 -->
		<property name="deliveryMode" value="2" />
	</bean>

	<!-- 推送队列 -->
	<bean id="testPush" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="cn.z.jiutian.test"/>
    </bean>
    
    <!-- 接收隊列 -->
    <!-- <bean id="settlementDate" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="${financial.settlementDate.reply.queue}"/>
    </bean>
	
	自定义接受消息对象
	<bean id="settlementDateReceiver" class="com.dx.wms.mq.activemq.receiver.SettlementDateReceiver" />
	
	监听器对象
	<bean class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="settlementDate" />
		开启订阅模式
		<property name="pubSubDomain" value="${dx.wms.mq.pubSubDomain}" />
		<property name="subscriptionDurable" value="${dx.wms.mq.subscriptionDurable}" />
		-这里是设置接收客户端的ID，在持久化时，但这个客户端不在线时，消息就存在数据库里，直到被这个ID的客户端消费掉
		<property name="messageListener" ref="settlementDateReceiver" />
		消息应答方式Session.AUTO_ACKNOWLEDGE 消息自动签收
		<property name="sessionAcknowledgeMode" value="${dx.wms.mq.sessionAcknowledgeMode}" />
	</bean> -->
	
</beans>